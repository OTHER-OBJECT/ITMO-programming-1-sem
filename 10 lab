#include <stdio.h>
#include <stdlib.h>

int NOD(int x, int y)
{
    if ( x % y == 0 )  return y;
    if ( y % x == 0 )  return x;
    if ( x > y ) return NOD( x % y, y);

    return NOD(x, y % x);
}
int NOK(int x, int y)
{
    return ( x * y ) / NOD (x, y);
}

int* point_distance(int* x_coord, int* y_coord, int n)
{
    int* array = malloc(n * (n - 1) * sizeof(int));
    int counter = 0;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (i != j)
            {
                array[counter] = sqrt(pow(abs(x_coord[i] - x_coord[j]), 2) + pow(abs(y_coord[i] - y_coord[j]), 2));
                counter += 1;
            }
        }
    }
    return array;
}
int main()
{
    int a = 0;
    int b = 0;
    printf("Enter first number \n");
    scanf("%d", &a);
    printf("Enter second number \n");
    scanf("%d", &b);
    printf("NOD %d\n", NOD(a, b));
    printf("NOK %d\n", NOK(a, b));

    printf("Enter the number of coordinates: ");
    int n;
    scanf("%d", &n);

    int* x = malloc(n * sizeof(int));
    int* y = malloc(n * sizeof(int));

    printf("Enter n coordinate pairs:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &x[i]);
        scanf("%d", &y[i]);
    }

    int* array = point_distance(x, y, n);

    for (int i = 0; i < n * (n - 1); i++)
    {
        if (i != n * (n - 1) - 1)
        {
            if (i%2 == 0)
            {
                printf("%d ", array[i]);
            }
            else
            {
                printf("%d\n", array[i]);
            }
        }
        else
        {
            printf("%d", array[i]);
        }

    }
    return 0;
}
